// AUTO GENERATED, DO NOT EDIT

package examples.exchange
import akka.NotUsed
import akka.stream.scaladsl.Source
import ethabi.util.{ Hex, Hash }
import ethabi.types._
import ethabi.types.generated._
import ethabi.protocol.{ Contract, EventValue }
import ethabi.protocol.Request._
import ethabi.protocol.Response.Log
import scala.concurrent.Future
final class Exchange(endpoint: String) { self =>
  private val impl = Contract(endpoint)
  import impl.dispatcher
  def service = impl.service
  private val binary = ""
  def filled(fresh1: Bytes32, sender: Address, opt: TransactionOpt): Future[TupleType1[Uint256]] = {
    val paramsEncoded = TypeInfo[TupleType1[Bytes32]].encode(TupleType1.apply[Bytes32](fresh1))
    val functionId = Hex.hex2Bytes("288cdc91")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Uint256]].decode(bytes, 0)
      result._1
    }
  }
  def batchFillOrders(orders: DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], takerAssetFillAmounts: DynamicArray[Uint256], signatures: DynamicArray[DynamicBytes], sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], DynamicArray[Uint256], DynamicArray[DynamicBytes]]].encode(TupleType3.apply[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], DynamicArray[Uint256], DynamicArray[DynamicBytes]](orders, takerAssetFillAmounts, signatures))
    val functionId = Hex.hex2Bytes("297bb70b")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def cancelled(fresh3: Bytes32, sender: Address, opt: TransactionOpt): Future[TupleType1[Bool]] = {
    val paramsEncoded = TypeInfo[TupleType1[Bytes32]].encode(TupleType1.apply[Bytes32](fresh3))
    val functionId = Hex.hex2Bytes("2ac12622")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Bool]].decode(bytes, 0)
      result._1
    }
  }
  def preSign(hash: Bytes32, signerAddress: Address, signature: DynamicBytes, sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[Bytes32, Address, DynamicBytes]].encode(TupleType3.apply[Bytes32, Address, DynamicBytes](hash, signerAddress, signature))
    val functionId = Hex.hex2Bytes("3683ef8e")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def matchOrders(leftOrder: TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], rightOrder: TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], leftSignature: DynamicBytes, rightSignature: DynamicBytes, sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType4[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], DynamicBytes, DynamicBytes]].encode(TupleType4.apply[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], DynamicBytes, DynamicBytes](leftOrder, rightOrder, leftSignature, rightSignature))
    val functionId = Hex.hex2Bytes("3c28d861")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def fillOrderNoThrow(order: TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], takerAssetFillAmount: Uint256, signature: DynamicBytes, sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], Uint256, DynamicBytes]].encode(TupleType3.apply[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], Uint256, DynamicBytes](order, takerAssetFillAmount, signature))
    val functionId = Hex.hex2Bytes("3e228bae")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def assetProxies(fresh5: Bytes4, sender: Address, opt: TransactionOpt): Future[TupleType1[Address]] = {
    val paramsEncoded = TypeInfo[TupleType1[Bytes4]].encode(TupleType1.apply[Bytes4](fresh5))
    val functionId = Hex.hex2Bytes("3fd3c997")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Address]].decode(bytes, 0)
      result._1
    }
  }
  def batchCancelOrders(orders: DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType1[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]]]].encode(TupleType1.apply[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]]](orders))
    val functionId = Hex.hex2Bytes("4ac14782")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def batchFillOrKillOrders(orders: DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], takerAssetFillAmounts: DynamicArray[Uint256], signatures: DynamicArray[DynamicBytes], sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], DynamicArray[Uint256], DynamicArray[DynamicBytes]]].encode(TupleType3.apply[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], DynamicArray[Uint256], DynamicArray[DynamicBytes]](orders, takerAssetFillAmounts, signatures))
    val functionId = Hex.hex2Bytes("4d0ae546")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def cancelOrdersUpTo(targetOrderEpoch: Uint256, sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType1[Uint256]].encode(TupleType1.apply[Uint256](targetOrderEpoch))
    val functionId = Hex.hex2Bytes("4f9559b1")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def batchFillOrdersNoThrow(orders: DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], takerAssetFillAmounts: DynamicArray[Uint256], signatures: DynamicArray[DynamicBytes], sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], DynamicArray[Uint256], DynamicArray[DynamicBytes]]].encode(TupleType3.apply[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], DynamicArray[Uint256], DynamicArray[DynamicBytes]](orders, takerAssetFillAmounts, signatures))
    val functionId = Hex.hex2Bytes("50dde190")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def getAssetProxy(assetProxyId: Bytes4, sender: Address, opt: TransactionOpt): Future[TupleType1[Address]] = {
    val paramsEncoded = TypeInfo[TupleType1[Bytes4]].encode(TupleType1.apply[Bytes4](assetProxyId))
    val functionId = Hex.hex2Bytes("60704108")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Address]].decode(bytes, 0)
      result._1
    }
  }
  def transactions(fresh8: Bytes32, sender: Address, opt: TransactionOpt): Future[TupleType1[Bool]] = {
    val paramsEncoded = TypeInfo[TupleType1[Bytes32]].encode(TupleType1.apply[Bytes32](fresh8))
    val functionId = Hex.hex2Bytes("642f2eaf")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Bool]].decode(bytes, 0)
      result._1
    }
  }
  def fillOrKillOrder(order: TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], takerAssetFillAmount: Uint256, signature: DynamicBytes, sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], Uint256, DynamicBytes]].encode(TupleType3.apply[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], Uint256, DynamicBytes](order, takerAssetFillAmount, signature))
    val functionId = Hex.hex2Bytes("64a3bc15")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def setSignatureValidatorApproval(validatorAddress: Address, approval: Bool, sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType2[Address, Bool]].encode(TupleType2.apply[Address, Bool](validatorAddress, approval))
    val functionId = Hex.hex2Bytes("77fcce68")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def allowedValidators(fresh10: Address, fresh11: Address, sender: Address, opt: TransactionOpt): Future[TupleType1[Bool]] = {
    val paramsEncoded = TypeInfo[TupleType2[Address, Address]].encode(TupleType2.apply[Address, Address](fresh10, fresh11))
    val functionId = Hex.hex2Bytes("7b8e3514")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Bool]].decode(bytes, 0)
      result._1
    }
  }
  def marketSellOrders(orders: DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], takerAssetFillAmount: Uint256, signatures: DynamicArray[DynamicBytes], sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], Uint256, DynamicArray[DynamicBytes]]].encode(TupleType3.apply[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], Uint256, DynamicArray[DynamicBytes]](orders, takerAssetFillAmount, signatures))
    val functionId = Hex.hex2Bytes("7e1d9808")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def getOrdersInfo(orders: DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], sender: Address, opt: TransactionOpt): Future[TupleType1[DynamicArray[TupleType3[Uint8, Bytes32, Uint256]]]] = {
    val paramsEncoded = TypeInfo[TupleType1[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]]]].encode(TupleType1.apply[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]]](orders))
    val functionId = Hex.hex2Bytes("7e9d74dc")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[DynamicArray[TupleType3[Uint8, Bytes32, Uint256]]]].decode(bytes, 0)
      result._1
    }
  }
  def preSigned(fresh14: Bytes32, fresh15: Address, sender: Address, opt: TransactionOpt): Future[TupleType1[Bool]] = {
    val paramsEncoded = TypeInfo[TupleType2[Bytes32, Address]].encode(TupleType2.apply[Bytes32, Address](fresh14, fresh15))
    val functionId = Hex.hex2Bytes("82c174d0")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Bool]].decode(bytes, 0)
      result._1
    }
  }
  def owner(sender: Address, opt: TransactionOpt): Future[TupleType1[Address]] = {
    val encoded = Hex.hex2Bytes("8da5cb5b")
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Address]].decode(bytes, 0)
      result._1
    }
  }
  def isValidSignature(hash: Bytes32, signerAddress: Address, signature: DynamicBytes, sender: Address, opt: TransactionOpt): Future[TupleType1[Bool]] = {
    val paramsEncoded = TypeInfo[TupleType3[Bytes32, Address, DynamicBytes]].encode(TupleType3.apply[Bytes32, Address, DynamicBytes](hash, signerAddress, signature))
    val functionId = Hex.hex2Bytes("93634702")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Bool]].decode(bytes, 0)
      result._1
    }
  }
  def marketBuyOrdersNoThrow(orders: DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], makerAssetFillAmount: Uint256, signatures: DynamicArray[DynamicBytes], sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], Uint256, DynamicArray[DynamicBytes]]].encode(TupleType3.apply[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], Uint256, DynamicArray[DynamicBytes]](orders, makerAssetFillAmount, signatures))
    val functionId = Hex.hex2Bytes("a3e20380")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def fillOrder(order: TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], takerAssetFillAmount: Uint256, signature: DynamicBytes, sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], Uint256, DynamicBytes]].encode(TupleType3.apply[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], Uint256, DynamicBytes](order, takerAssetFillAmount, signature))
    val functionId = Hex.hex2Bytes("b4be83d5")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def executeTransaction(salt: Uint256, signerAddress: Address, data: DynamicBytes, signature: DynamicBytes, sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType4[Uint256, Address, DynamicBytes, DynamicBytes]].encode(TupleType4.apply[Uint256, Address, DynamicBytes, DynamicBytes](salt, signerAddress, data, signature))
    val functionId = Hex.hex2Bytes("bfc8bfce")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def registerAssetProxy(assetProxy: Address, sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType1[Address]].encode(TupleType1.apply[Address](assetProxy))
    val functionId = Hex.hex2Bytes("c585bb93")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def getOrderInfo(order: TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], sender: Address, opt: TransactionOpt): Future[TupleType1[TupleType3[Uint8, Bytes32, Uint256]]] = {
    val paramsEncoded = TypeInfo[TupleType1[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]]].encode(TupleType1.apply[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]](order))
    val functionId = Hex.hex2Bytes("c75e0a81")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[TupleType3[Uint8, Bytes32, Uint256]]].decode(bytes, 0)
      result._1
    }
  }
  def cancelOrder(order: TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes], sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType1[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]]].encode(TupleType1.apply[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]](order))
    val functionId = Hex.hex2Bytes("d46b02c3")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def orderEpoch(fresh18: Address, fresh19: Address, sender: Address, opt: TransactionOpt): Future[TupleType1[Uint256]] = {
    val paramsEncoded = TypeInfo[TupleType2[Address, Address]].encode(TupleType2.apply[Address, Address](fresh18, fresh19))
    val functionId = Hex.hex2Bytes("d9bfa73e")
    val encoded = functionId ++ paramsEncoded
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Uint256]].decode(bytes, 0)
      result._1
    }
  }
  def ZRX_ASSET_DATA(sender: Address, opt: TransactionOpt): Future[TupleType1[DynamicBytes]] = {
    val encoded = Hex.hex2Bytes("db123b1a")
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[DynamicBytes]].decode(bytes, 0)
      result._1
    }
  }
  def marketSellOrdersNoThrow(orders: DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], takerAssetFillAmount: Uint256, signatures: DynamicArray[DynamicBytes], sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], Uint256, DynamicArray[DynamicBytes]]].encode(TupleType3.apply[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], Uint256, DynamicArray[DynamicBytes]](orders, takerAssetFillAmount, signatures))
    val functionId = Hex.hex2Bytes("dd1c7d18")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def EIP712_DOMAIN_HASH(sender: Address, opt: TransactionOpt): Future[TupleType1[Bytes32]] = {
    val encoded = Hex.hex2Bytes("e306f779")
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Bytes32]].decode(bytes, 0)
      result._1
    }
  }
  def marketBuyOrders(orders: DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], makerAssetFillAmount: Uint256, signatures: DynamicArray[DynamicBytes], sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType3[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], Uint256, DynamicArray[DynamicBytes]]].encode(TupleType3.apply[DynamicArray[TupleType12[Address, Address, Address, Address, Uint256, Uint256, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]], Uint256, DynamicArray[DynamicBytes]](orders, makerAssetFillAmount, signatures))
    val functionId = Hex.hex2Bytes("e5fa431b")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def currentContextAddress(sender: Address, opt: TransactionOpt): Future[TupleType1[Address]] = {
    val encoded = Hex.hex2Bytes("eea086ba")
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[Address]].decode(bytes, 0)
      result._1
    }
  }
  def transferOwnership(newOwner: Address, sender: Address, opt: TransactionOpt): Future[Hash] = {
    val paramsEncoded = TypeInfo[TupleType1[Address]].encode(TupleType1.apply[Address](newOwner))
    val functionId = Hex.hex2Bytes("f2fde38b")
    val encoded = functionId ++ paramsEncoded
    impl.sendTransaction(encoded, sender, opt)
  }
  def VERSION(sender: Address, opt: TransactionOpt): Future[TupleType1[StringType]] = {
    val encoded = Hex.hex2Bytes("ffa1ad74")
    impl.call(encoded, sender, opt).map { bytes => 
      val result = TypeInfo[TupleType1[StringType]].decode(bytes, 0)
      result._1
    }
  }
  def deploy(_zrxAssetData: DynamicBytes, sender: Address, opt: TransactionOpt): Unit = {
    val paramsEncoded = TypeInfo[TupleType1[DynamicBytes]].encode(TupleType1.apply[DynamicBytes](_zrxAssetData))
    val code = Hex.hex2Bytes(binary)
    val encoded = code ++ paramsEncoded
    impl.deploy(encoded, sender, opt)
  }
  def decodeSignatureValidatorApproval(log: Log): EventValue = {
    var typeInfos = Seq.empty[TypeInfo[SolType]]
    typeInfos = typeInfos :+ (TypeInfo[Address])
    typeInfos = typeInfos :+ (TypeInfo[Address])
    typeInfos = typeInfos :+ (TypeInfo[TupleType1[Bool]])
    EventValue.decodeEvent(typeInfos, log)
  }
  def subscribeSignatureValidatorApproval: Source[EventValue, NotUsed] = {
    val query = LogQuery.from(contractAddress, Hash("0xa8656e308026eeabce8f0bc18048433252318ab80ac79da0b3d3d8697dfba891"))
    impl.subscribeLogs(query).map(decodeSignatureValidatorApproval)
  }
  def decodeFill(log: Log): EventValue = {
    var typeInfos = Seq.empty[TypeInfo[SolType]]
    typeInfos = typeInfos :+ (TypeInfo[Address])
    typeInfos = typeInfos :+ (TypeInfo[Address])
    typeInfos = typeInfos :+ (TypeInfo[Bytes32])
    typeInfos = typeInfos :+ (TypeInfo[TupleType8[Address, Address, Uint256, Uint256, Uint256, Uint256, DynamicBytes, DynamicBytes]])
    EventValue.decodeEvent(typeInfos, log)
  }
  def subscribeFill: Source[EventValue, NotUsed] = {
    val query = LogQuery.from(contractAddress, Hash("0x0bcc4c97732e47d9946f229edb95f5b6323f601300e4690de719993f3c371129"))
    impl.subscribeLogs(query).map(decodeFill)
  }
  def decodeCancel(log: Log): EventValue = {
    var typeInfos = Seq.empty[TypeInfo[SolType]]
    typeInfos = typeInfos :+ (TypeInfo[Address])
    typeInfos = typeInfos :+ (TypeInfo[Address])
    typeInfos = typeInfos :+ (TypeInfo[Bytes32])
    typeInfos = typeInfos :+ (TypeInfo[TupleType3[Address, DynamicBytes, DynamicBytes]])
    EventValue.decodeEvent(typeInfos, log)
  }
  def subscribeCancel: Source[EventValue, NotUsed] = {
    val query = LogQuery.from(contractAddress, Hash("0xdc47b3613d9fe400085f6dbdc99453462279057e6207385042827ed6b1a62cf7"))
    impl.subscribeLogs(query).map(decodeCancel)
  }
  def decodeCancelUpTo(log: Log): EventValue = {
    var typeInfos = Seq.empty[TypeInfo[SolType]]
    typeInfos = typeInfos :+ (TypeInfo[Address])
    typeInfos = typeInfos :+ (TypeInfo[Address])
    typeInfos = typeInfos :+ (TypeInfo[TupleType1[Uint256]])
    EventValue.decodeEvent(typeInfos, log)
  }
  def subscribeCancelUpTo: Source[EventValue, NotUsed] = {
    val query = LogQuery.from(contractAddress, Hash("0x82af639571738f4ebd4268fb0363d8957ebe1bbb9e78dba5ebd69eed39b154f0"))
    impl.subscribeLogs(query).map(decodeCancelUpTo)
  }
  def decodeAssetProxyRegistered(log: Log): EventValue = {
    var typeInfos = Seq.empty[TypeInfo[SolType]]
    typeInfos = typeInfos :+ (TypeInfo[TupleType2[Bytes4, Address]])
    EventValue.decodeEvent(typeInfos, log)
  }
  def subscribeAssetProxyRegistered: Source[EventValue, NotUsed] = {
    val query = LogQuery.from(contractAddress, Hash("0xd2c6b762299c609bdb96520b58a49bfb80186934d4f71a86a367571a15c03194"))
    impl.subscribeLogs(query).map(decodeAssetProxyRegistered)
  }
  def isDeployed: Boolean = impl.isDeployed
  def contractAddress: Address = impl.address.get
  def loadFrom(contractAddress: Address) = impl.load(contractAddress)
}